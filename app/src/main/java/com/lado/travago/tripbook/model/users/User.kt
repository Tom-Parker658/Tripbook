package com.lado.travago.tripbook.model.users

import com.lado.travago.tripbook.model.enums.OCCUPATION
import com.lado.travago.tripbook.model.enums.SEX

/**
 * This interface is concerned with handling individuals such as a [Booker] or a [Scanner]. It contains some basic details about
 *
 * * @property uid is the id generated by firestore
 * @property bookerId id the firestore auth id generated
 * @property name is the name of the user
 * @property birthdayInMillis is the birth day of the scanner expressed in milliseconds which will be used to calculate his age
 * @property sex is the gender of the scanner gotten from the [SEX] enum
 * @property photoUrl is the url of the user's face photo url
 * @property recoveryPhoneNumber is the contact of the user used to LogIn & SignIn e.g MTN, ORANGE, NEXTELL
 * @property nationality is the birth country of the scanner
 * @property birthPlace is the location where this user was born
 *
 * @property userMap is a firestore map which contains the info about the user to be stored
 */
interface User {
    val bookerId: String
    val name: String
    val birthdayInMillis: Long
    val recoveryPhoneNumber: String
    val sex: SEX
    val photoUrl: String
    val birthPlace: String
    val occupation: OCCUPATION
    val nationality: String
        get() = "Cameroon"
    val userMap: HashMap<String, Any?>

    /**
     * An inner class which contains some basic information about the user.
     * This class is used to display scanner info on a recyclerView
     */
    open class UserBasicInfo(
        open val name: String,
        open val birthdayInMillis: Long,
        open val phoneNumber: String,
        open val photoUrl: String,
        open val occupation: OCCUPATION
    )
}